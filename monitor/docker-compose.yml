version: '3.6'

networks:
  caddy:
    external: true
  storage:
    external: true
  monitoring:
    external: false
    
services:
  vmagent:
    container_name: vmagent
    image: victoriametrics/vmagent
    ports:
      - 8429:8429
    env_file: 
      - '../env/common.env'
    volumes:
      - ${USERDIR}/volumes/vmagentdata:/vmagentdata
      - ../config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--promscrape.config=/etc/prometheus/prometheus.yml'
      - '--remoteWrite.url=http://victoria-metrics:8428/api/v1/write'
      - '--promscrape.config.strictParse=false'
    networks:
      - caddy
      - storage
      - monitoring
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: always
    environment:
      - '--enable_load_reader=true'
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - caddy 
      - storage
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    env_file:
      - '../env/common.env'
      - '../env/grafana.env'
    expose:
      - '3000'
    volumes:
      - '${USERDIR}/volumes/grafana/plugins:/var/lib/grafana/plugins:rw'
    networks:
      - caddy
      - storage
      - monitoring

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    env_file:
      - '../env/common.env'
    user: root
    privileged: true
    restart: always
    expose:
      - '9100'
    volumes:
      - '/proc:/host/proc:ro'
      - '/sys:/host/sys:ro'
      - '/:/rootfs:ro'
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    command: -H unix:///var/run/docker.sock
    expose:
      - '9000'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '${USERDIR}/volumes/portainer/data:/data'
    networks:
      - caddy
      - monitoring
